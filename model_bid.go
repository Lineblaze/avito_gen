/*
Tender Management API

API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка). 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Bid Информация о предложении
type Bid struct {
	// Уникальный идентификатор предложения, присвоенный сервером.
	Id string `json:"id"`
	// Полное название предложения
	Name string `json:"name"`
	// Описание предложения
	Description string `json:"description"`
	Status BidStatus `json:"status"`
	// Уникальный идентификатор тендера, присвоенный сервером.
	TenderId string `json:"tenderId"`
	AuthorType BidAuthorType `json:"authorType"`
	// Уникальный идентификатор автора предложения, присвоенный сервером.
	AuthorId string `json:"authorId"`
	// Номер версии последней правки
	Version int32 `json:"version"`
	// Серверная дата и время в момент, когда пользователь отправил предложение на создание. Передается в формате RFC3339. 
	CreatedAt string `json:"createdAt"`
}

// NewBid instantiates a new Bid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBid(id string, name string, description string, status BidStatus, tenderId string, authorType BidAuthorType, authorId string, version int32, createdAt string) *Bid {
	this := Bid{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Status = status
	this.TenderId = tenderId
	this.AuthorType = authorType
	this.AuthorId = authorId
	this.Version = version
	this.CreatedAt = createdAt
	return &this
}

// NewBidWithDefaults instantiates a new Bid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidWithDefaults() *Bid {
	this := Bid{}
	var version int32 = 1
	this.Version = version
	return &this
}

// GetId returns the Id field value
func (o *Bid) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Bid) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Bid) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Bid) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Bid) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Bid) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Bid) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Bid) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Bid) SetDescription(v string) {
	o.Description = v
}

// GetStatus returns the Status field value
func (o *Bid) GetStatus() BidStatus {
	if o == nil {
		var ret BidStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Bid) GetStatusOk() (*BidStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Bid) SetStatus(v BidStatus) {
	o.Status = v
}

// GetTenderId returns the TenderId field value
func (o *Bid) GetTenderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenderId
}

// GetTenderIdOk returns a tuple with the TenderId field value
// and a boolean to check if the value has been set.
func (o *Bid) GetTenderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenderId, true
}

// SetTenderId sets field value
func (o *Bid) SetTenderId(v string) {
	o.TenderId = v
}

// GetAuthorType returns the AuthorType field value
func (o *Bid) GetAuthorType() BidAuthorType {
	if o == nil {
		var ret BidAuthorType
		return ret
	}

	return o.AuthorType
}

// GetAuthorTypeOk returns a tuple with the AuthorType field value
// and a boolean to check if the value has been set.
func (o *Bid) GetAuthorTypeOk() (*BidAuthorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorType, true
}

// SetAuthorType sets field value
func (o *Bid) SetAuthorType(v BidAuthorType) {
	o.AuthorType = v
}

// GetAuthorId returns the AuthorId field value
func (o *Bid) GetAuthorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value
// and a boolean to check if the value has been set.
func (o *Bid) GetAuthorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorId, true
}

// SetAuthorId sets field value
func (o *Bid) SetAuthorId(v string) {
	o.AuthorId = v
}

// GetVersion returns the Version field value
func (o *Bid) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Bid) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Bid) SetVersion(v int32) {
	o.Version = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Bid) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Bid) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Bid) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o Bid) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["tenderId"] = o.TenderId
	}
	if true {
		toSerialize["authorType"] = o.AuthorType
	}
	if true {
		toSerialize["authorId"] = o.AuthorId
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableBid struct {
	value *Bid
	isSet bool
}

func (v NullableBid) Get() *Bid {
	return v.value
}

func (v *NullableBid) Set(val *Bid) {
	v.value = val
	v.isSet = true
}

func (v NullableBid) IsSet() bool {
	return v.isSet
}

func (v *NullableBid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBid(val *Bid) *NullableBid {
	return &NullableBid{value: val, isSet: true}
}

func (v NullableBid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


