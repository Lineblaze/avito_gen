/*
Tender Management API

API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateEmployeeRequest struct for CreateEmployeeRequest
type CreateEmployeeRequest struct {
	// Уникальный slug пользователя.
	Username string `json:"username"`
	// Имя пользователя.
	Firstname *string `json:"firstname,omitempty"`
	// Фамилия пользователя.
	Lastname *string `json:"lastname,omitempty"`
}

// NewCreateEmployeeRequest instantiates a new CreateEmployeeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmployeeRequest(username string) *CreateEmployeeRequest {
	this := CreateEmployeeRequest{}
	this.Username = username
	return &this
}

// NewCreateEmployeeRequestWithDefaults instantiates a new CreateEmployeeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmployeeRequestWithDefaults() *CreateEmployeeRequest {
	this := CreateEmployeeRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *CreateEmployeeRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CreateEmployeeRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CreateEmployeeRequest) SetUsername(v string) {
	o.Username = v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *CreateEmployeeRequest) GetFirstname() string {
	if o == nil || o.Firstname == nil {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmployeeRequest) GetFirstnameOk() (*string, bool) {
	if o == nil || o.Firstname == nil {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *CreateEmployeeRequest) HasFirstname() bool {
	if o != nil && o.Firstname != nil {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *CreateEmployeeRequest) SetFirstname(v string) {
	o.Firstname = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *CreateEmployeeRequest) GetLastname() string {
	if o == nil || o.Lastname == nil {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmployeeRequest) GetLastnameOk() (*string, bool) {
	if o == nil || o.Lastname == nil {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *CreateEmployeeRequest) HasLastname() bool {
	if o != nil && o.Lastname != nil {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *CreateEmployeeRequest) SetLastname(v string) {
	o.Lastname = &v
}

func (o CreateEmployeeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if o.Firstname != nil {
		toSerialize["firstname"] = o.Firstname
	}
	if o.Lastname != nil {
		toSerialize["lastname"] = o.Lastname
	}
	return json.Marshal(toSerialize)
}

type NullableCreateEmployeeRequest struct {
	value *CreateEmployeeRequest
	isSet bool
}

func (v NullableCreateEmployeeRequest) Get() *CreateEmployeeRequest {
	return v.value
}

func (v *NullableCreateEmployeeRequest) Set(val *CreateEmployeeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmployeeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmployeeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmployeeRequest(val *CreateEmployeeRequest) *NullableCreateEmployeeRequest {
	return &NullableCreateEmployeeRequest{value: val, isSet: true}
}

func (v NullableCreateEmployeeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmployeeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
