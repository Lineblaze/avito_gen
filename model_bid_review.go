/*
Tender Management API

API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BidReview Отзыв о предложении
type BidReview struct {
	// Уникальный идентификатор отзыва, присвоенный сервером.
	Id string `json:"id"`
	// Описание предложения
	Description string `json:"description"`
	// Серверная дата и время в момент, когда пользователь отправил отзыв на предложение. Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
}

// NewBidReview instantiates a new BidReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBidReview(id string, description string, createdAt string) *BidReview {
	this := BidReview{}
	this.Id = id
	this.Description = description
	this.CreatedAt = createdAt
	return &this
}

// NewBidReviewWithDefaults instantiates a new BidReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidReviewWithDefaults() *BidReview {
	this := BidReview{}
	return &this
}

// GetId returns the Id field value
func (o *BidReview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BidReview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BidReview) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *BidReview) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *BidReview) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *BidReview) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BidReview) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BidReview) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BidReview) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o BidReview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableBidReview struct {
	value *BidReview
	isSet bool
}

func (v NullableBidReview) Get() *BidReview {
	return v.value
}

func (v *NullableBidReview) Set(val *BidReview) {
	v.value = val
	v.isSet = true
}

func (v NullableBidReview) IsSet() bool {
	return v.isSet
}

func (v *NullableBidReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBidReview(val *BidReview) *NullableBidReview {
	return &NullableBidReview{value: val, isSet: true}
}

func (v NullableBidReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBidReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
