/*
Tender Management API

API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateTenderRequest struct for CreateTenderRequest
type CreateTenderRequest struct {
	// Полное название тендера
	Name string `json:"name"`
	// Описание тендера
	Description string            `json:"description"`
	ServiceType TenderServiceType `json:"serviceType"`
	Status      TenderStatus      `json:"status"`
	// Уникальный идентификатор организации, присвоенный сервером.
	OrganizationId string `json:"organizationId"`
	// Уникальный slug пользователя.
	CreatorUsername string `json:"creatorUsername"`
}

// NewCreateTenderRequest instantiates a new CreateTenderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenderRequest(name string, description string, serviceType TenderServiceType, status TenderStatus, organizationId string, creatorUsername string) *CreateTenderRequest {
	this := CreateTenderRequest{}
	this.Name = name
	this.Description = description
	this.ServiceType = serviceType
	this.Status = status
	this.OrganizationId = organizationId
	this.CreatorUsername = creatorUsername
	return &this
}

// NewCreateTenderRequestWithDefaults instantiates a new CreateTenderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenderRequestWithDefaults() *CreateTenderRequest {
	this := CreateTenderRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateTenderRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateTenderRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *CreateTenderRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateTenderRequest) SetDescription(v string) {
	o.Description = v
}

// GetServiceType returns the ServiceType field value
func (o *CreateTenderRequest) GetServiceType() TenderServiceType {
	if o == nil {
		var ret TenderServiceType
		return ret
	}

	return o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetServiceTypeOk() (*TenderServiceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceType, true
}

// SetServiceType sets field value
func (o *CreateTenderRequest) SetServiceType(v TenderServiceType) {
	o.ServiceType = v
}

// GetStatus returns the Status field value
func (o *CreateTenderRequest) GetStatus() TenderStatus {
	if o == nil {
		var ret TenderStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetStatusOk() (*TenderStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CreateTenderRequest) SetStatus(v TenderStatus) {
	o.Status = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateTenderRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateTenderRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetCreatorUsername returns the CreatorUsername field value
func (o *CreateTenderRequest) GetCreatorUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorUsername
}

// GetCreatorUsernameOk returns a tuple with the CreatorUsername field value
// and a boolean to check if the value has been set.
func (o *CreateTenderRequest) GetCreatorUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorUsername, true
}

// SetCreatorUsername sets field value
func (o *CreateTenderRequest) SetCreatorUsername(v string) {
	o.CreatorUsername = v
}

func (o CreateTenderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["serviceType"] = o.ServiceType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if true {
		toSerialize["creatorUsername"] = o.CreatorUsername
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTenderRequest struct {
	value *CreateTenderRequest
	isSet bool
}

func (v NullableCreateTenderRequest) Get() *CreateTenderRequest {
	return v.value
}

func (v *NullableCreateTenderRequest) Set(val *CreateTenderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenderRequest(val *CreateTenderRequest) *NullableCreateTenderRequest {
	return &NullableCreateTenderRequest{value: val, isSet: true}
}

func (v NullableCreateTenderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
