/*
Tender Management API

API для управления тендерами и предложениями.   Основные функции API включают управление тендерами (создание, изменение, получение списка) и управление предложениями (создание, изменение, получение списка).

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Tender Информация о тендере
type Tender struct {
	// Уникальный идентификатор тендера, присвоенный сервером.
	Id string `json:"id"`
	// Полное название тендера
	Name string `json:"name"`
	// Описание тендера
	Description string            `json:"description"`
	ServiceType TenderServiceType `json:"serviceType"`
	Status      TenderStatus      `json:"status"`
	// Уникальный идентификатор организации, присвоенный сервером.
	OrganizationId string `json:"organizationId"`
	// Номер версии посел правок
	Version int32 `json:"version"`
	// Серверная дата и время в момент, когда пользователь отправил тендер на создание. Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
}

// NewTender instantiates a new Tender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTender(id string, name string, description string, serviceType TenderServiceType, status TenderStatus, organizationId string, version int32, createdAt string) *Tender {
	this := Tender{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.ServiceType = serviceType
	this.Status = status
	this.OrganizationId = organizationId
	this.Version = version
	this.CreatedAt = createdAt
	return &this
}

// NewTenderWithDefaults instantiates a new Tender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenderWithDefaults() *Tender {
	this := Tender{}
	var version int32 = 1
	this.Version = version
	return &this
}

// GetId returns the Id field value
func (o *Tender) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Tender) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Tender) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Tender) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Tender) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Tender) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Tender) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Tender) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Tender) SetDescription(v string) {
	o.Description = v
}

// GetServiceType returns the ServiceType field value
func (o *Tender) GetServiceType() TenderServiceType {
	if o == nil {
		var ret TenderServiceType
		return ret
	}

	return o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value
// and a boolean to check if the value has been set.
func (o *Tender) GetServiceTypeOk() (*TenderServiceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceType, true
}

// SetServiceType sets field value
func (o *Tender) SetServiceType(v TenderServiceType) {
	o.ServiceType = v
}

// GetStatus returns the Status field value
func (o *Tender) GetStatus() TenderStatus {
	if o == nil {
		var ret TenderStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Tender) GetStatusOk() (*TenderStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Tender) SetStatus(v TenderStatus) {
	o.Status = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *Tender) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *Tender) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *Tender) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetVersion returns the Version field value
func (o *Tender) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Tender) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Tender) SetVersion(v int32) {
	o.Version = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Tender) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Tender) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Tender) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o Tender) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["serviceType"] = o.ServiceType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableTender struct {
	value *Tender
	isSet bool
}

func (v NullableTender) Get() *Tender {
	return v.value
}

func (v *NullableTender) Set(val *Tender) {
	v.value = val
	v.isSet = true
}

func (v NullableTender) IsSet() bool {
	return v.isSet
}

func (v *NullableTender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTender(val *Tender) *NullableTender {
	return &NullableTender{value: val, isSet: true}
}

func (v NullableTender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
